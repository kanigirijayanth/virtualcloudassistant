/*********************************************************************************************************************
*  Copyright 2025 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *
*                                                                                                                    *
*  Licensed under the Amazon Software License (the "License"). You may not use this file except in compliance        *
*  with the License. A copy of the License is located at                                                             *
*                                                                                                                    *
*      http://aws.amazon.com/asl/                                                                                    *
*                                                                                                                    *
*  or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES *
*  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *
*  and limitations under the License.                                                                                *
**********************************************************************************************************************/

import { logInfo, logError, logDebug } from './debugUtils';

/**
 * BedrockAgentLogger - Utility for logging Bedrock agent interactions
 */
export const BedrockAgentLogger = {
    /**
     * Log a request to the Bedrock agent
     * 
     * @param {Object} request - The request object sent to the agent
     */
    logRequest: (request) => {
        logDebug('BedrockAgent', 'Request', request);
    },
    
    /**
     * Log a response from the Bedrock agent
     * 
     * @param {Object} response - The response object from the agent
     */
    logResponse: (response) => {
        logDebug('BedrockAgent', 'Response', response);
    }
};

/**
 * Determines if a query is related to project documentation
 * 
 * @param {string} query - The user's query text
 * @returns {boolean} - True if the query is about project documentation
 */
export const isProjectDocumentationQuery = (query) => {
    // Keywords that suggest the query is about project documentation
    const projectDocKeywords = [
        'project', 'documentation', 'docs', 'document', 
        'architecture', 'design', 'specification', 'spec',
        'requirements', 'user guide', 'manual', 'handbook',
        'technical doc', 'api doc', 'system doc'
    ];
    
    // Convert query to lowercase for case-insensitive matching
    const lowerQuery = query.toLowerCase();
    
    // Check if any of the keywords are in the query
    return projectDocKeywords.some(keyword => lowerQuery.includes(keyword));
};

/**
 * Format the Bedrock agent response for display in the UI
 * 
 * @param {Object} agentResponse - The raw response from the Bedrock agent
 * @returns {Object} - Formatted response for the KnowledgeBaseResult component
 */
export const formatBedrockAgentResponse = (agentResponse) => {
    try {
        // Extract the response content
        const responseContent = agentResponse.completion || 
                               agentResponse.response || 
                               agentResponse.content || 
                               JSON.stringify(agentResponse);
        
        // Create a formatted response object
        return {
            title: "Project Documentation (Bedrock Agent)",
            content: responseContent,
            source: "Generated by Bedrock Agent",
            metadata: {
                processing_time: {
                    retrieval: "N/A",
                    generation: "N/A",
                    total: "N/A"
                },
                agent_id: agentResponse.agentId || "N/A",
                agent_alias_id: agentResponse.agentAliasId || "N/A"
            }
        };
    } catch (error) {
        logError('BedrockAgent', 'Error formatting agent response', error);
        return {
            title: "Project Documentation (Bedrock Agent)",
            content: "Error formatting agent response: " + error.message,
            source: "Error",
            metadata: {}
        };
    }
};
